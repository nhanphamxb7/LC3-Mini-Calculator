(0000) 0500  0000010100000000 (   1)                 .ORIG x0500
(0500) 0054  0000000001010100 (   9) guide           .FILL x0054
(0501) 0048  0000000001001000 (   9)                 .FILL x0048
(0502) 0049  0000000001001001 (   9)                 .FILL x0049
(0503) 0053  0000000001010011 (   9)                 .FILL x0053
(0504) 0020  0000000000100000 (   9)                 .FILL x0020
(0505) 0050  0000000001010000 (   9)                 .FILL x0050
(0506) 0052  0000000001010010 (   9)                 .FILL x0052
(0507) 004F  0000000001001111 (   9)                 .FILL x004F
(0508) 0047  0000000001000111 (   9)                 .FILL x0047
(0509) 0052  0000000001010010 (   9)                 .FILL x0052
(050A) 0041  0000000001000001 (   9)                 .FILL x0041
(050B) 004D  0000000001001101 (   9)                 .FILL x004D
(050C) 0020  0000000000100000 (   9)                 .FILL x0020
(050D) 0050  0000000001010000 (   9)                 .FILL x0050
(050E) 0045  0000000001000101 (   9)                 .FILL x0045
(050F) 0052  0000000001010010 (   9)                 .FILL x0052
(0510) 0046  0000000001000110 (   9)                 .FILL x0046
(0511) 004F  0000000001001111 (   9)                 .FILL x004F
(0512) 0052  0000000001010010 (   9)                 .FILL x0052
(0513) 004D  0000000001001101 (   9)                 .FILL x004D
(0514) 0053  0000000001010011 (   9)                 .FILL x0053
(0515) 0020  0000000000100000 (   9)                 .FILL x0020
(0516) 0036  0000000000110110 (   9)                 .FILL x0036
(0517) 0020  0000000000100000 (   9)                 .FILL x0020
(0518) 004F  0000000001001111 (   9)                 .FILL x004F
(0519) 0050  0000000001010000 (   9)                 .FILL x0050
(051A) 0045  0000000001000101 (   9)                 .FILL x0045
(051B) 0052  0000000001010010 (   9)                 .FILL x0052
(051C) 0041  0000000001000001 (   9)                 .FILL x0041
(051D) 0054  0000000001010100 (   9)                 .FILL x0054
(051E) 0049  0000000001001001 (   9)                 .FILL x0049
(051F) 004F  0000000001001111 (   9)                 .FILL x004F
(0520) 004E  0000000001001110 (   9)                 .FILL x004E
(0521) 0053  0000000001010011 (   9)                 .FILL x0053
(0522) 000A  0000000000001010 (   9)                 .FILL x000A
(0523) 0049  0000000001001001 (   9)                 .FILL x0049
(0524) 004E  0000000001001110 (   9)                 .FILL x004E
(0525) 0050  0000000001010000 (   9)                 .FILL x0050
(0526) 0055  0000000001010101 (   9)                 .FILL x0055
(0527) 0054  0000000001010100 (   9)                 .FILL x0054
(0528) 002F  0000000000101111 (   9)                 .FILL x002F
(0529) 004F  0000000001001111 (   9)                 .FILL x004F
(052A) 0055  0000000001010101 (   9)                 .FILL x0055
(052B) 0054  0000000001010100 (   9)                 .FILL x0054
(052C) 0050  0000000001010000 (   9)                 .FILL x0050
(052D) 0055  0000000001010101 (   9)                 .FILL x0055
(052E) 0054  0000000001010100 (   9)                 .FILL x0054
(052F) 0020  0000000000100000 (   9)                 .FILL x0020
(0530) 0052  0000000001010010 (   9)                 .FILL x0052
(0531) 0041  0000000001000001 (   9)                 .FILL x0041
(0532) 004E  0000000001001110 (   9)                 .FILL x004E
(0533) 0047  0000000001000111 (   9)                 .FILL x0047
(0534) 0045  0000000001000101 (   9)                 .FILL x0045
(0535) 003A  0000000000111010 (   9)                 .FILL x003A
(0536) 0020  0000000000100000 (   9)                 .FILL x0020
(0537) 002D  0000000000101101 (   9)                 .FILL x002D
(0538) 0033  0000000000110011 (   9)                 .FILL x0033
(0539) 0032  0000000000110010 (   9)                 .FILL x0032
(053A) 0037  0000000000110111 (   9)                 .FILL x0037
(053B) 0036  0000000000110110 (   9)                 .FILL x0036
(053C) 0038  0000000000111000 (   9)                 .FILL x0038
(053D) 002E  0000000000101110 (   9)                 .FILL x002E
(053E) 002E  0000000000101110 (   9)                 .FILL x002E
(053F) 0033  0000000000110011 (   9)                 .FILL x0033
(0540) 0032  0000000000110010 (   9)                 .FILL x0032
(0541) 0037  0000000000110111 (   9)                 .FILL x0037
(0542) 0036  0000000000110110 (   9)                 .FILL x0036
(0543) 0037  0000000000110111 (   9)                 .FILL x0037
(0544) 000A  0000000000001010 (   9)                 .FILL x000A
(0545) 000A  0000000000001010 (   9)                 .FILL x000A
(0546) 0000  0000000000000000 (   9)                 .FILL x0000
(0547) E1B8  1110000110111000 (  10)                 LEA   R0 guide
(0548) F022  1111000000100010 (  11)                 TRAP  x22
(0549) 0049  0000000001001001 (  12) txt1            .FILL x0049
(054A) 006E  0000000001101110 (  12)                 .FILL x006E
(054B) 0070  0000000001110000 (  12)                 .FILL x0070
(054C) 0075  0000000001110101 (  12)                 .FILL x0075
(054D) 0074  0000000001110100 (  12)                 .FILL x0074
(054E) 0020  0000000000100000 (  12)                 .FILL x0020
(054F) 0066  0000000001100110 (  12)                 .FILL x0066
(0550) 0069  0000000001101001 (  12)                 .FILL x0069
(0551) 0072  0000000001110010 (  12)                 .FILL x0072
(0552) 0073  0000000001110011 (  12)                 .FILL x0073
(0553) 0074  0000000001110100 (  12)                 .FILL x0074
(0554) 0020  0000000000100000 (  12)                 .FILL x0020
(0555) 006E  0000000001101110 (  12)                 .FILL x006E
(0556) 0075  0000000001110101 (  12)                 .FILL x0075
(0557) 006D  0000000001101101 (  12)                 .FILL x006D
(0558) 0062  0000000001100010 (  12)                 .FILL x0062
(0559) 0065  0000000001100101 (  12)                 .FILL x0065
(055A) 0072  0000000001110010 (  12)                 .FILL x0072
(055B) 0020  0000000000100000 (  12)                 .FILL x0020
(055C) 003A  0000000000111010 (  12)                 .FILL x003A
(055D) 0020  0000000000100000 (  12)                 .FILL x0020
(055E) 0020  0000000000100000 (  12)                 .FILL x0020
(055F) 0000  0000000000000000 (  12)                 .FILL x0000
(0560) 0049  0000000001001001 (  13) txt2            .FILL x0049
(0561) 006E  0000000001101110 (  13)                 .FILL x006E
(0562) 0070  0000000001110000 (  13)                 .FILL x0070
(0563) 0075  0000000001110101 (  13)                 .FILL x0075
(0564) 0074  0000000001110100 (  13)                 .FILL x0074
(0565) 0020  0000000000100000 (  13)                 .FILL x0020
(0566) 0073  0000000001110011 (  13)                 .FILL x0073
(0567) 0065  0000000001100101 (  13)                 .FILL x0065
(0568) 0063  0000000001100011 (  13)                 .FILL x0063
(0569) 006F  0000000001101111 (  13)                 .FILL x006F
(056A) 006E  0000000001101110 (  13)                 .FILL x006E
(056B) 0064  0000000001100100 (  13)                 .FILL x0064
(056C) 0020  0000000000100000 (  13)                 .FILL x0020
(056D) 006E  0000000001101110 (  13)                 .FILL x006E
(056E) 0075  0000000001110101 (  13)                 .FILL x0075
(056F) 006D  0000000001101101 (  13)                 .FILL x006D
(0570) 0062  0000000001100010 (  13)                 .FILL x0062
(0571) 0065  0000000001100101 (  13)                 .FILL x0065
(0572) 0072  0000000001110010 (  13)                 .FILL x0072
(0573) 003A  0000000000111010 (  13)                 .FILL x003A
(0574) 0020  0000000000100000 (  13)                 .FILL x0020
(0575) 0020  0000000000100000 (  13)                 .FILL x0020
(0576) 0000  0000000000000000 (  13)                 .FILL x0000
(0577) 5920  0101100100100000 (  15)                 AND   R4 R4 #0
(0578) 193F  0001100100111111 (  16)                 ADD   R4 R4 #-1
(0579) 38BD  0011100010111101 (  17)                 ST    R4 CASE
(057A) E1CE  1110000111001110 (  19)                 LEA   R0 txt1
(057B) F022  1111000000100010 (  20)                 TRAP  x22
(057C) 49E1  0100100111100001 (  21)                 JSR   INPUT_STRING_N1
(057D) 490B  0100100100001011 (  22)                 JSR   COPY_LEN
(057E) 4A2B  0100101000101011 (  23)                 JSR   RESET_R
(057F) 2240  0010001001000000 (  24)                 LD    R1 n1len
(0580) 490F  0100100100001111 (  25)                 JSR   STRING_TO_NUM
(0581) 30E1  0011000011100001 (  26)                 ST    R0 n1val
(0582) E1DD  1110000111011101 (  28)                 LEA   R0 txt2
(0583) F022  1111000000100010 (  29)                 TRAP  x22
(0584) 49FF  0100100111111111 (  30)                 JSR   INPUT_STRING_N2
(0585) 4903  0100100100000011 (  31)                 JSR   COPY_LEN
(0586) 4A23  0100101000100011 (  32)                 JSR   RESET_R
(0587) 2239  0010001000111001 (  33)                 LD    R1 n2len
(0588) 4907  0100100100000111 (  34)                 JSR   STRING_TO_NUM
(0589) 30DA  0011000011011010 (  35)                 ST    R0 n2val
(058A) 48F7  0100100011110111 (  37)                 JSR   COPY_CASE
(058B) 20AB  0010000010101011 (  38)                 LD    R0 CASE
(058C) 143E  0001010000111110 (  39)                 ADD   R2 R0 #-2
(058D) 0A02  0000101000000010 (  40)                 BRNP  SKIP_M_M
(058E) 103C  0001000000111100 (  41)                 ADD   R0 R0 #-4
(058F) 30A7  0011000010100111 (  42)                 ST    R0 CASE
(0590) 4A19  0100101000011001 (  45) SKIP_M_M        JSR   RESET_R
(0591) 000A  0000000000001010 (  46) txt_add         .FILL x000A
(0592) 0052  0000000001010010 (  46)                 .FILL x0052
(0593) 0031  0000000000110001 (  46)                 .FILL x0031
(0594) 0020  0000000000100000 (  46)                 .FILL x0020
(0595) 002B  0000000000101011 (  46)                 .FILL x002B
(0596) 0020  0000000000100000 (  46)                 .FILL x0020
(0597) 0052  0000000001010010 (  46)                 .FILL x0052
(0598) 0032  0000000000110010 (  46)                 .FILL x0032
(0599) 0020  0000000000100000 (  46)                 .FILL x0020
(059A) 0020  0000000000100000 (  46)                 .FILL x0020
(059B) 003D  0000000000111101 (  46)                 .FILL x003D
(059C) 0020  0000000000100000 (  46)                 .FILL x0020
(059D) 0000  0000000000000000 (  46)                 .FILL x0000
(059E) E1F2  1110000111110010 (  47)                 LEA   R0 txt_add
(059F) F022  1111000000100010 (  48)                 TRAP  x22
(05A0) 22C2  0010001011000010 (  49)                 LD    R1 n1val
(05A1) 24C2  0010010011000010 (  50)                 LD    R2 n2val
(05A2) 2094  0010000010010100 (  51)                 LD    R0 CASE
(05A3) 0606  0000011000000110 (  52)                 BRZP  ADD_DIF_SIGN
(05A4) 1622  0001011000100010 (  53)                 ADD   R3 R0 #2
(05A5) 0A01  0000101000000001 (  54)                 BRNP  ADD_P_P
(05A6) 48FA  0100100011111010 (  55)                 JSR   PRINT_MINUS_SIGN
(05A7) 1042  0001000001000010 (  58) ADD_P_P         ADD   R0 R1 R2
(05A8) 48FF  0100100011111111 (  59)                 JSR   NUM_TO_STRING
(05A9) 0E18  0000111000011000 (  60)                 BRNZP SUB
(05AA) 94BF  1001010010111111 (  63) ADD_DIF_SIGN    NOT   R2 R2
(05AB) 14A1  0001010010100001 (  64)                 ADD   R2 R2 #1
(05AC) 208A  0010000010001010 (  65)                 LD    R0 CASE
(05AD) 0209  0000001000001001 (  66)                 BRP   ADD_CASE_1
(05AE) 1042  0001000001000010 (  68)                 ADD   R0 R1 R2
(05AF) 0C01  0000110000000001 (  69)                 BRNZ  x05B1
(05B0) 48F0  0100100011110000 (  70)                 JSR   PRINT_MINUS_SIGN
(05B1) 1020  0001000000100000 (  71)                 ADD   R0 R0 #0
(05B2) 0202  0000001000000010 (  72)                 BRP   x05B5
(05B3) 903F  1001000000111111 (  73)                 NOT   R0 R0
(05B4) 1021  0001000000100001 (  74)                 ADD   R0 R0 #1
(05B5) 48F2  0100100011110010 (  75)                 JSR   NUM_TO_STRING
(05B6) 0E0B  0000111000001011 (  76)                 BRNZP SUB
(05B7) 1042  0001000001000010 (  79) ADD_CASE_1      ADD   R0 R1 R2
(05B8) 0201  0000001000000001 (  80)                 BRP   x05BA
(05B9) 48E7  0100100011100111 (  81)                 JSR   PRINT_MINUS_SIGN
(05BA) 1020  0001000000100000 (  82)                 ADD   R0 R0 #0
(05BB) 0202  0000001000000010 (  83)                 BRP   x05BE
(05BC) 903F  1001000000111111 (  84)                 NOT   R0 R0
(05BD) 1021  0001000000100001 (  85)                 ADD   R0 R0 #1
(05BE) 48E9  0100100011101001 (  86)                 JSR   NUM_TO_STRING
(05BF) 0E02  0000111000000010 (  87)                 BRNZP SUB
(05C0) 0000  0000000000000000 (  89) n1len           .FILL x0000
(05C1) 0000  0000000000000000 (  90) n2len           .FILL x0000
(05C2) 49E7  0100100111100111 (  92) SUB             JSR   RESET_R
(05C3) 000A  0000000000001010 (  93) txt_sub         .FILL x000A
(05C4) 0052  0000000001010010 (  93)                 .FILL x0052
(05C5) 0031  0000000000110001 (  93)                 .FILL x0031
(05C6) 0020  0000000000100000 (  93)                 .FILL x0020
(05C7) 002D  0000000000101101 (  93)                 .FILL x002D
(05C8) 0020  0000000000100000 (  93)                 .FILL x0020
(05C9) 0052  0000000001010010 (  93)                 .FILL x0052
(05CA) 0032  0000000000110010 (  93)                 .FILL x0032
(05CB) 0020  0000000000100000 (  93)                 .FILL x0020
(05CC) 0020  0000000000100000 (  93)                 .FILL x0020
(05CD) 003D  0000000000111101 (  93)                 .FILL x003D
(05CE) 0020  0000000000100000 (  93)                 .FILL x0020
(05CF) 0000  0000000000000000 (  93)                 .FILL x0000
(05D0) E1F2  1110000111110010 (  94)                 LEA   R0 txt_sub
(05D1) F022  1111000000100010 (  95)                 TRAP  x22
(05D2) 2290  0010001010010000 (  96)                 LD    R1 n1val
(05D3) 2490  0010010010010000 (  97)                 LD    R2 n2val
(05D4) 2062  0010000001100010 (  98)                 LD    R0 CASE
(05D5) 060C  0000011000001100 ( 100)                 BRZP  ZP_CASE
(05D6) 94BF  1001010010111111 ( 101)                 NOT   R2 R2
(05D7) 14A1  0001010010100001 ( 102)                 ADD   R2 R2 #1
(05D8) 1022  0001000000100010 ( 103)                 ADD   R0 R0 #2
(05D9) 040E  0000010000001110 ( 104)                 BRZ   M2_CASE
(05DA) 1642  0001011001000010 ( 105)                 ADD   R3 R1 R2
(05DB) 0603  0000011000000011 ( 106)                 BRZP  x05DF
(05DC) 96FF  1001011011111111 ( 107)                 NOT   R3 R3
(05DD) 16E1  0001011011100001 ( 108)                 ADD   R3 R3 #1
(05DE) 48C2  0100100011000010 ( 109)                 JSR   PRINT_MINUS_SIGN
(05DF) 10E0  0001000011100000 ( 110)                 ADD   R0 R3 #0
(05E0) 48C7  0100100011000111 ( 111)                 JSR   NUM_TO_STRING
(05E1) 0E0E  0000111000001110 ( 112)                 BRNZP MUL
(05E2) 2054  0010000001010100 ( 115) ZP_CASE         LD    R0 CASE
(05E3) 0201  0000001000000001 ( 116)                 BRP   x05E5
(05E4) 48BC  0100100010111100 ( 117)                 JSR   PRINT_MINUS_SIGN
(05E5) 1042  0001000001000010 ( 118)                 ADD   R0 R1 R2
(05E6) 48C1  0100100011000001 ( 119)                 JSR   NUM_TO_STRING
(05E7) 0E08  0000111000001000 ( 120)                 BRNZP MUL
(05E8) 1042  0001000001000010 ( 123) M2_CASE         ADD   R0 R1 R2
(05E9) 0802  0000100000000010 ( 124)                 BRN   x05EC
(05EA) 48B6  0100100010110110 ( 125)                 JSR   PRINT_MINUS_SIGN
(05EB) 0E02  0000111000000010 ( 126)                 BRNZP x05EE
(05EC) 903F  1001000000111111 ( 127)                 NOT   R0 R0
(05ED) 1021  0001000000100001 ( 128)                 ADD   R0 R0 #1
(05EE) 48B9  0100100010111001 ( 129)                 JSR   NUM_TO_STRING
(05EF) 0E00  0000111000000000 ( 130)                 BRNZP MUL
(05F0) 49B9  0100100110111001 ( 133) MUL             JSR   RESET_R
(05F1) 000A  0000000000001010 ( 134) txt_mul         .FILL x000A
(05F2) 0052  0000000001010010 ( 134)                 .FILL x0052
(05F3) 0031  0000000000110001 ( 134)                 .FILL x0031
(05F4) 0020  0000000000100000 ( 134)                 .FILL x0020
(05F5) 002A  0000000000101010 ( 134)                 .FILL x002A
(05F6) 0020  0000000000100000 ( 134)                 .FILL x0020
(05F7) 0052  0000000001010010 ( 134)                 .FILL x0052
(05F8) 0032  0000000000110010 ( 134)                 .FILL x0032
(05F9) 0020  0000000000100000 ( 134)                 .FILL x0020
(05FA) 0020  0000000000100000 ( 134)                 .FILL x0020
(05FB) 003D  0000000000111101 ( 134)                 .FILL x003D
(05FC) 0020  0000000000100000 ( 134)                 .FILL x0020
(05FD) 0000  0000000000000000 ( 134)                 .FILL x0000
(05FE) E1F2  1110000111110010 ( 135)                 LEA   R0 txt_mul
(05FF) F022  1111000000100010 ( 136)                 TRAP  x22
(0600) 2262  0010001001100010 ( 137)                 LD    R1 n1val
(0601) 2462  0010010001100010 ( 138)                 LD    R2 n2val
(0602) 2034  0010000000110100 ( 139)                 LD    R0 CASE
(0603) 0801  0000100000000001 ( 140)                 BRN   MUL_SAME_SIGN
(0604) 489C  0100100010011100 ( 141)                 JSR   PRINT_MINUS_SIGN
(0605) 48D0  0100100011010000 ( 143) MUL_SAME_SIGN   JSR   MULT
(0606) 48A1  0100100010100001 ( 144)                 JSR   NUM_TO_STRING
(0607) 49A2  0100100110100010 ( 146)                 JSR   RESET_R
(0608) 000A  0000000000001010 ( 147) txt_quo         .FILL x000A
(0609) 0052  0000000001010010 ( 147)                 .FILL x0052
(060A) 0031  0000000000110001 ( 147)                 .FILL x0031
(060B) 0020  0000000000100000 ( 147)                 .FILL x0020
(060C) 002F  0000000000101111 ( 147)                 .FILL x002F
(060D) 0020  0000000000100000 ( 147)                 .FILL x0020
(060E) 0052  0000000001010010 ( 147)                 .FILL x0052
(060F) 0032  0000000000110010 ( 147)                 .FILL x0032
(0610) 0020  0000000000100000 ( 147)                 .FILL x0020
(0611) 0020  0000000000100000 ( 147)                 .FILL x0020
(0612) 003D  0000000000111101 ( 147)                 .FILL x003D
(0613) 0020  0000000000100000 ( 147)                 .FILL x0020
(0614) 0000  0000000000000000 ( 147)                 .FILL x0000
(0615) 002C  0000000000101100 ( 148) txt_rem         .FILL x002C
(0616) 0020  0000000000100000 ( 148)                 .FILL x0020
(0617) 0072  0000000001110010 ( 148)                 .FILL x0072
(0618) 0065  0000000001100101 ( 148)                 .FILL x0065
(0619) 006D  0000000001101101 ( 148)                 .FILL x006D
(061A) 0061  0000000001100001 ( 148)                 .FILL x0061
(061B) 0069  0000000001101001 ( 148)                 .FILL x0069
(061C) 006E  0000000001101110 ( 148)                 .FILL x006E
(061D) 0064  0000000001100100 ( 148)                 .FILL x0064
(061E) 0065  0000000001100101 ( 148)                 .FILL x0065
(061F) 0072  0000000001110010 ( 148)                 .FILL x0072
(0620) 0020  0000000000100000 ( 148)                 .FILL x0020
(0621) 003D  0000000000111101 ( 148)                 .FILL x003D
(0622) 0020  0000000000100000 ( 148)                 .FILL x0020
(0623) 0000  0000000000000000 ( 148)                 .FILL x0000
(0624) E1E3  1110000111100011 ( 149)                 LEA   R0 txt_quo
(0625) F022  1111000000100010 ( 150)                 TRAP  x22
(0626) 223C  0010001000111100 ( 151)                 LD    R1 n1val
(0627) 243C  0010010000111100 ( 152)                 LD    R2 n2val
(0628) 200E  0010000000001110 ( 153)                 LD    R0 CASE
(0629) 0803  0000100000000011 ( 154)                 BRN   DIV_SAME_SIGN
(062A) 16E1  0001011011100001 ( 155)                 ADD   R3 R3 #1
(062B) 193F  0001100100111111 ( 156)                 ADD   R4 R4 #-1
(062C) 4874  0100100001110100 ( 157)                 JSR   PRINT_MINUS_SIGN
(062D) 48C3  0100100011000011 ( 159) DIV_SAME_SIGN   JSR   DIVN
(062E) 2036  0010000000110110 ( 160)                 LD    R0 res_quo
(062F) 1003  0001000000000011 ( 161)                 ADD   R0 R0 R3
(0630) 4877  0100100001110111 ( 162)                 JSR   NUM_TO_STRING
(0631) E1E3  1110000111100011 ( 163)                 LEA   R0 txt_rem
(0632) F022  1111000000100010 ( 164)                 TRAP  x22
(0633) 2032  0010000000110010 ( 165)                 LD    R0 res_rem
(0634) 1004  0001000000000100 ( 166)                 ADD   R0 R0 R4
(0635) 4872  0100100001110010 ( 167)                 JSR   NUM_TO_STRING
(0636) 0E01  0000111000000001 ( 168)                 BRNZP x0638
(0637) 0000  0000000000000000 ( 169) CASE            .FILL x0000
(0638) 4971  0100100101110001 ( 171)                 JSR   RESET_R
(0639) E1CE  1110000111001110 ( 172)                 LEA   R0 txt_quo
(063A) F022  1111000000100010 ( 173)                 TRAP  x22
(063B) 21FB  0010000111111011 ( 174)                 LD    R0 CASE
(063C) 0801  0000100000000001 ( 175)                 BRN   x063E
(063D) 4863  0100100001100011 ( 176)                 JSR   PRINT_MINUS_SIGN
(063E) 2026  0010000000100110 ( 177)                 LD    R0 res_quo
(063F) 4868  0100100001101000 ( 178)                 JSR   NUM_TO_STRING
(0640) 20FB  0010000011111011 ( 179)                 LD    R0 PAS
(0641) 103E  0001000000111110 ( 180)                 ADD   R0 R0 #-2
(0642) B0FE  1011000011111110 ( 181)                 STI   R0 DDR
(0643) 2CF8  0010110011111000 ( 183)                 LD    R6 PAS
(0644) 2221  0010001000100001 ( 184)                 LD    R1 res_rem
(0645) 54A0  0101010010100000 ( 185)                 AND   R2 R2 #0
(0646) 14AA  0001010010101010 ( 186)                 ADD   R2 R2 #10
(0647) 488E  0100100010001110 ( 187)                 JSR   MULT
(0648) 1220  0001001000100000 ( 188)                 ADD   R1 R0 #0
(0649) 241A  0010010000011010 ( 189)                 LD    R2 n2val
(064A) 48A6  0100100010100110 ( 190)                 JSR   DIVN
(064B) 2019  0010000000011001 ( 191)                 LD    R0 res_quo
(064C) 1D80  0001110110000000 ( 192)                 ADD   R6 R6 R0
(064D) BCF3  1011110011110011 ( 193)                 STI   R6 DDR
(064E) 2CED  0010110011101101 ( 195)                 LD    R6 PAS
(064F) 2216  0010001000010110 ( 196)                 LD    R1 res_rem
(0650) 54A0  0101010010100000 ( 197)                 AND   R2 R2 #0
(0651) 14AA  0001010010101010 ( 198)                 ADD   R2 R2 #10
(0652) 4883  0100100010000011 ( 199)                 JSR   MULT
(0653) 1220  0001001000100000 ( 200)                 ADD   R1 R0 #0
(0654) 240F  0010010000001111 ( 201)                 LD    R2 n2val
(0655) 489B  0100100010011011 ( 202)                 JSR   DIVN
(0656) 200E  0010000000001110 ( 203)                 LD    R0 res_quo
(0657) 1D80  0001110110000000 ( 204)                 ADD   R6 R6 R0
(0658) BCE8  1011110011101000 ( 205)                 STI   R6 DDR
(0659) E00D  1110000000001101 ( 207)                 LEA   R0 txt_sqrt1
(065A) F022  1111000000100010 ( 208)                 TRAP  x22
(065B) 2007  0010000000000111 ( 209)                 LD    R0 n1val
(065C) 48AF  0100100010101111 ( 210)                 JSR   SQRT
(065D) E016  1110000000010110 ( 211)                 LEA   R0 txt_sqrt2
(065E) F022  1111000000100010 ( 212)                 TRAP  x22
(065F) 2004  0010000000000100 ( 213)                 LD    R0 n2val
(0660) 48AB  0100100010101011 ( 214)                 JSR   SQRT
(0661) 0E1F  0000111000011111 ( 215)                 BRNZP DONE_PROJECT
(0662) 002D  0000000000101101 ( 217) pminus          .FILL x002D
(0663) 0000  0000000000000000 ( 218) n1val           .FILL x0000
(0664) 0000  0000000000000000 ( 219) n2val           .FILL x0000
(0665) 0000  0000000000000000 ( 220) res_quo         .FILL x0000
(0666) 0000  0000000000000000 ( 221) res_rem         .FILL x0000
(0667) 000A  0000000000001010 ( 222) txt_sqrt1       .FILL x000A
(0668) 0053  0000000001010011 ( 222)                 .FILL x0053
(0669) 0051  0000000001010001 ( 222)                 .FILL x0051
(066A) 0052  0000000001010010 ( 222)                 .FILL x0052
(066B) 0054  0000000001010100 ( 222)                 .FILL x0054
(066C) 0020  0000000000100000 ( 222)                 .FILL x0020
(066D) 007C  0000000001111100 ( 222)                 .FILL x007C
(066E) 0052  0000000001010010 ( 222)                 .FILL x0052
(066F) 0031  0000000000110001 ( 222)                 .FILL x0031
(0670) 007C  0000000001111100 ( 222)                 .FILL x007C
(0671) 007E  0000000001111110 ( 222)                 .FILL x007E
(0672) 0020  0000000000100000 ( 222)                 .FILL x0020
(0673) 0000  0000000000000000 ( 222)                 .FILL x0000
(0674) 000A  0000000000001010 ( 223) txt_sqrt2       .FILL x000A
(0675) 0053  0000000001010011 ( 223)                 .FILL x0053
(0676) 0051  0000000001010001 ( 223)                 .FILL x0051
(0677) 0052  0000000001010010 ( 223)                 .FILL x0052
(0678) 0054  0000000001010100 ( 223)                 .FILL x0054
(0679) 0020  0000000000100000 ( 223)                 .FILL x0020
(067A) 007C  0000000001111100 ( 223)                 .FILL x007C
(067B) 0052  0000000001010010 ( 223)                 .FILL x0052
(067C) 0032  0000000000110010 ( 223)                 .FILL x0032
(067D) 007C  0000000001111100 ( 223)                 .FILL x007C
(067E) 007E  0000000001111110 ( 223)                 .FILL x007E
(067F) 0020  0000000000100000 ( 223)                 .FILL x0020
(0680) 0000  0000000000000000 ( 223)                 .FILL x0000
(0681) F025  1111000000100101 ( 225) DONE_PROJECT    TRAP  x25
(0682) 3ECD  0011111011001101 ( 228) COPY_CASE       ST    R7 saveR7
(0683) 23B3  0010001110110011 ( 229)                 LD    R1 CASE
(0684) 2450  0010010001010000 ( 230)                 LD    R2 CASE_2
(0685) 1242  0001001001000010 ( 231)                 ADD   R1 R1 R2
(0686) 33B0  0011001110110000 ( 232)                 ST    R1 CASE
(0687) 2EC8  0010111011001000 ( 233)                 LD    R7 saveR7
(0688) C1C0  1100000111000000 ( 234)                 RET   
(0689) 3EC6  0011111011000110 ( 237) COPY_LEN        ST    R7 saveR7
(068A) 22D1  0010001011010001 ( 238)                 LD    R1 len1
(068B) 3334  0011001100110100 ( 239)                 ST    R1 n1len
(068C) 22D0  0010001011010000 ( 240)                 LD    R1 len2
(068D) 3333  0011001100110011 ( 241)                 ST    R1 n2len
(068E) 2EC1  0010111011000001 ( 242)                 LD    R7 saveR7
(068F) C1C0  1100000111000000 ( 243)                 RET   
(0690) 3EC5  0011111011000101 ( 246) STRING_TO_NUM   ST    R7 saveR7_strn
(0691) 1C60  0001110001100000 ( 247)                 ADD   R6 R1 #0
(0692) 28C5  0010100011000101 ( 248)                 LD    R4 string
(0693) 1901  0001100100000001 ( 249)                 ADD   R4 R4 R1
(0694) 193F  0001100100111111 ( 250)                 ADD   R4 R4 #-1
(0695) EAAE  1110101010101110 ( 251)                 LEA   R5 mult10
(0696) 6500  0110010100000000 ( 253) CONVERT         LDR   R2 R4 #0
(0697) 6340  0110001101000000 ( 254)                 LDR   R1 R5 #0
(0698) 483D  0100100000111101 ( 255)                 JSR   MULT
(0699) 16C0  0001011011000000 ( 256)                 ADD   R3 R3 R0
(069A) 193F  0001100100111111 ( 257)                 ADD   R4 R4 #-1
(069B) 1B61  0001101101100001 ( 258)                 ADD   R5 R5 #1
(069C) 1DBF  0001110110111111 ( 259)                 ADD   R6 R6 #-1
(069D) 03F8  0000001111111000 ( 260)                 BRP   CONVERT
(069E) 10E0  0001000011100000 ( 261)                 ADD   R0 R3 #0
(069F) 2EB6  0010111010110110 ( 262)                 LD    R7 saveR7_strn
(06A0) C1C0  1100000111000000 ( 263)                 RET   
(06A1) 3EAE  0011111010101110 ( 266) PRINT_MINUS_SIGN ST    R7 saveR7
(06A2) 30A6  0011000010100110 ( 267)                 ST    R0 saveR0
(06A3) 21BE  0010000110111110 ( 268)                 LD    R0 pminus
(06A4) B09C  1011000010011100 ( 269)                 STI   R0 DDR
(06A5) 20A3  0010000010100011 ( 270)                 LD    R0 saveR0
(06A6) 2EA9  0010111010101001 ( 271)                 LD    R7 saveR7
(06A7) C1C0  1100000111000000 ( 272)                 RET   
(06A8) 3EAE  0011111010101110 ( 275) NUM_TO_STRING   ST    R7 saveR7_nstr
(06A9) 38A3  0011100010100011 ( 276)                 ST    R4 saveR4
(06AA) 5260  0101001001100000 ( 278)                 AND   R1 R1 #0
(06AB) 54A0  0101010010100000 ( 279)                 AND   R2 R2 #0
(06AC) 5B60  0101101101100000 ( 280)                 AND   R5 R5 #0
(06AD) 1B69  0001101101101001 ( 281)                 ADD   R5 R5 #9
(06AE) 2CAB  0010110010101011 ( 282)                 LD    R6 numstr
(06AF) 7380  0111001110000000 ( 284) CLEAR_STRING    STR   R1 R6 #0
(06B0) 1DA1  0001110110100001 ( 285)                 ADD   R6 R6 #1
(06B1) 1B7F  0001101101111111 ( 286)                 ADD   R5 R5 #-1
(06B2) 03FC  0000001111111100 ( 287)                 BRP   CLEAR_STRING
(06B3) 5B60  0101101101100000 ( 289)                 AND   R5 R5 #0
(06B4) 1B65  0001101101100101 ( 290)                 ADD   R5 R5 #5
(06B5) 2886  0010100010000110 ( 291)                 LD    R4 PAS
(06B6) 2CA3  0010110010100011 ( 292)                 LD    R6 numstr
(06B7) 1DA4  0001110110100100 ( 293)                 ADD   R6 R6 #4
(06B8) 482C  0100100000101100 ( 295) CONVERT_TO_CHAR JSR   DIVI
(06B9) 1484  0001010010000100 ( 296)                 ADD   R2 R2 R4
(06BA) 7580  0111010110000000 ( 297)                 STR   R2 R6 #0
(06BB) 1060  0001000001100000 ( 298)                 ADD   R0 R1 #0
(06BC) 1DBF  0001110110111111 ( 299)                 ADD   R6 R6 #-1
(06BD) 1B7F  0001101101111111 ( 300)                 ADD   R5 R5 #-1
(06BE) 03F9  0000001111111001 ( 301)                 BRP   CONVERT_TO_CHAR
(06BF) 5B60  0101101101100000 ( 303)                 AND   R5 R5 #0
(06C0) 1B65  0001101101100101 ( 304)                 ADD   R5 R5 #5
(06C1) 2C98  0010110010011000 ( 305)                 LD    R6 numstr
(06C2) 6380  0110001110000000 ( 307) PRINT           LDR   R1 R6 #0
(06C3) B27D  1011001001111101 ( 308)                 STI   R1 DDR
(06C4) 1DA1  0001110110100001 ( 309)                 ADD   R6 R6 #1
(06C5) 1B7F  0001101101111111 ( 310)                 ADD   R5 R5 #-1
(06C6) 03FB  0000001111111011 ( 311)                 BRP   PRINT
(06C7) 2885  0010100010000101 ( 313)                 LD    R4 saveR4
(06C8) 2E8E  0010111010001110 ( 314)                 LD    R7 saveR7_nstr
(06C9) C1C0  1100000111000000 ( 315)                 RET   
(06CA) 3E87  0011111010000111 ( 318) CHECK_MINUS_SIGN ST    R7 saveR7_sign
(06CB) 3680  0011011010000000 ( 319)                 ST    R3 saveR3
(06CC) 5260  0101001001100000 ( 320)                 AND   R1 R1 #0
(06CD) 1270  0001001001110000 ( 321)                 ADD   R1 R1 #-16
(06CE) 2674  0010011001110100 ( 322)                 LD    R3 minus
(06CF) 1603  0001011000000011 ( 323)                 ADD   R3 R0 R3
(06D0) 0401  0000010000000001 ( 324)                 BRZ   MINUS_SIGN
(06D1) 5260  0101001001100000 ( 325)                 AND   R1 R1 #0
(06D2) 2679  0010011001111001 ( 327) MINUS_SIGN      LD    R3 saveR3
(06D3) 2E7E  0010111001111110 ( 328)                 LD    R7 saveR7_sign
(06D4) C1C0  1100000111000000 ( 329)                 RET   
(06D5) 0000  0000000000000000 ( 330) CASE_2          .FILL x0000
(06D6) 3E7C  0011111001111100 ( 333) MULT            ST    R7 saveR7_mult
(06D7) 3272  0011001001110010 ( 334)                 ST    R1 saveR1
(06D8) 3472  0011010001110010 ( 335)                 ST    R2 saveR2
(06D9) 5020  0101000000100000 ( 336)                 AND   R0 R0 #0
(06DA) 1260  0001001001100000 ( 337)                 ADD   R1 R1 #0
(06DB) 0405  0000010000000101 ( 338)                 BRZ   TER_BY_0
(06DC) 14A0  0001010010100000 ( 339)                 ADD   R2 R2 #0
(06DD) 0403  0000010000000011 ( 340)                 BRZ   TER_BY_0
(06DE) 1001  0001000000000001 ( 342) MULTIPLY        ADD   R0 R0 R1
(06DF) 14BF  0001010010111111 ( 343)                 ADD   R2 R2 #-1
(06E0) 03FD  0000001111111101 ( 344)                 BRP   MULTIPLY
(06E1) 2268  0010001001101000 ( 346) TER_BY_0        LD    R1 saveR1
(06E2) 2468  0010010001101000 ( 347)                 LD    R2 saveR2
(06E3) 2E6F  0010111001101111 ( 348)                 LD    R7 saveR7_mult
(06E4) C1C0  1100000111000000 ( 349)                 RET   
(06E5) 3E6E  0011111001101110 ( 352) DIVI            ST    R7 saveR7_divi
(06E6) 5260  0101001001100000 ( 353)                 AND   R1 R1 #0
(06E7) 54A0  0101010010100000 ( 354)                 AND   R2 R2 #0
(06E8) 1261  0001001001100001 ( 357) DIV_10          ADD   R1 R1 #1
(06E9) 1036  0001000000110110 ( 358)                 ADD   R0 R0 #-10
(06EA) 07FD  0000011111111101 ( 359)                 BRZP  DIV_10
(06EB) 127F  0001001001111111 ( 360)                 ADD   R1 R1 #-1
(06EC) 142A  0001010000101010 ( 361)                 ADD   R2 R0 #10
(06ED) 325C  0011001001011100 ( 362)                 ST    R1 saveR1
(06EE) 345C  0011010001011100 ( 363)                 ST    R2 saveR2
(06EF) 2E64  0010111001100100 ( 364)                 LD    R7 saveR7_divi
(06F0) C1C0  1100000111000000 ( 365)                 RET   
(06F1) 3E63  0011111001100011 ( 368) DIVN            ST    R7 saveR7_divn
(06F2) 3257  0011001001010111 ( 369)                 ST    R1 saveR1
(06F3) 3457  0011010001010111 ( 370)                 ST    R2 saveR2
(06F4) 3657  0011011001010111 ( 371)                 ST    R3 saveR3
(06F5) 3857  0011100001010111 ( 372)                 ST    R4 saveR4
(06F6) 56E0  0101011011100000 ( 373)                 AND   R3 R3 #0
(06F7) 5920  0101100100100000 ( 374)                 AND   R4 R4 #0
(06F8) 94BF  1001010010111111 ( 375)                 NOT   R2 R2
(06F9) 14A1  0001010010100001 ( 376)                 ADD   R2 R2 #1
(06FA) 16E1  0001011011100001 ( 378) DIV_N           ADD   R3 R3 #1
(06FB) 1242  0001001001000010 ( 379)                 ADD   R1 R1 R2
(06FC) 07FD  0000011111111101 ( 380)                 BRZP  DIV_N
(06FD) 16FF  0001011011111111 ( 381)                 ADD   R3 R3 #-1
(06FE) 94BF  1001010010111111 ( 382)                 NOT   R2 R2
(06FF) 14A1  0001010010100001 ( 383)                 ADD   R2 R2 #1
(0700) 1842  0001100001000010 ( 384)                 ADD   R4 R1 R2
(0701) 3763  0011011101100011 ( 385)                 ST    R3 res_quo
(0702) 3963  0011100101100011 ( 386)                 ST    R4 res_rem
(0703) 2246  0010001001000110 ( 387)                 LD    R1 saveR1
(0704) 2446  0010010001000110 ( 388)                 LD    R2 saveR2
(0705) 2646  0010011001000110 ( 389)                 LD    R3 saveR3
(0706) 2846  0010100001000110 ( 390)                 LD    R4 saveR4
(0707) 2E4D  0010111001001101 ( 391)                 LD    R7 saveR7_divn
(0708) C1C0  1100000111000000 ( 392)                 RET   
(0709) 0064  0000000001100100 ( 394) hund            .FILL x0064
(070A) 0000  0000000000000000 ( 395) sr0             .FILL x0000
(070B) 0000  0000000000000000 ( 396) sr1             .FILL x0000
(070C) 3E43  0011111001000011 ( 398) SQRT            ST    R7 saveR7
(070D) 31FC  0011000111111100 ( 399)                 ST    R0 sr0
(070E) 9C3F  1001110000111111 ( 400)                 NOT   R6 R0
(070F) 1DA1  0001110110100001 ( 401)                 ADD   R6 R6 #1
(0710) 5260  0101001001100000 ( 403)                 AND   R1 R1 #0
(0711) 54A0  0101010010100000 ( 404)                 AND   R2 R2 #0
(0712) 1261  0001001001100001 ( 406) FIND_LIM        ADD   R1 R1 #1
(0713) 14A1  0001010010100001 ( 407)                 ADD   R2 R2 #1
(0714) 4FC1  0100111111000001 ( 408)                 JSR   MULT
(0715) 1A06  0001101000000110 ( 409)                 ADD   R5 R0 R6
(0716) 0421  0000010000100001 ( 410)                 BRZ   TRUE_SQRT
(0717) 09FA  0000100111111010 ( 411)                 BRN   FIND_LIM
(0718) 33F2  0011001111110010 ( 412)                 ST    R1 sr1
(0719) 107F  0001000001111111 ( 413)                 ADD   R0 R1 #-1
(071A) 4F8D  0100111110001101 ( 414)                 JSR   NUM_TO_STRING
(071B) 2020  0010000000100000 ( 416)                 LD    R0 PAS
(071C) 103E  0001000000111110 ( 417)                 ADD   R0 R0 #-2
(071D) B023  1011000000100011 ( 418)                 STI   R0 DDR
(071E) 23EC  0010001111101100 ( 419)                 LD    R1 sr1
(071F) 25EB  0010010111101011 ( 420)                 LD    R2 sr1
(0720) 2DE9  0010110111101001 ( 421)                 LD    R6 sr0
(0721) 127F  0001001001111111 ( 423)                 ADD   R1 R1 #-1
(0722) 14BF  0001010010111111 ( 424)                 ADD   R2 R2 #-1
(0723) 4FB2  0100111110110010 ( 425)                 JSR   MULT
(0724) 903F  1001000000111111 ( 426)                 NOT   R0 R0
(0725) 1021  0001000000100001 ( 427)                 ADD   R0 R0 #1
(0726) 1380  0001001110000000 ( 428)                 ADD   R1 R6 R0
(0727) 25E1  0010010111100001 ( 429)                 LD    R2 hund
(0728) 4FAD  0100111110101101 ( 430)                 JSR   MULT
(0729) 122A  0001001000101010 ( 431)                 ADD   R1 R0 #10
(072A) 126A  0001001001101010 ( 432)                 ADD   R1 R1 #10
(072B) 25DF  0010010111011111 ( 433)                 LD    R2 sr1
(072C) 1482  0001010010000010 ( 434)                 ADD   R2 R2 R2
(072D) 14BF  0001010010111111 ( 435)                 ADD   R2 R2 #-1
(072E) 4FC2  0100111111000010 ( 436)                 JSR   DIVN
(072F) 2135  0010000100110101 ( 437)                 LD    R0 res_quo
(0730) 4FB4  0100111110110100 ( 438)                 JSR   DIVI
(0731) 200A  0010000000001010 ( 440)                 LD    R0 PAS
(0732) 1001  0001000000000001 ( 441)                 ADD   R0 R0 R1
(0733) B00D  1011000000001101 ( 442)                 STI   R0 DDR
(0734) 2007  0010000000000111 ( 444)                 LD    R0 PAS
(0735) 1002  0001000000000010 ( 445)                 ADD   R0 R0 R2
(0736) B00A  1011000000001010 ( 446)                 STI   R0 DDR
(0737) 0E02  0000111000000010 ( 448)                 BRNZP END_SQRT
(0738) 1060  0001000001100000 ( 451) TRUE_SQRT       ADD   R0 R1 #0
(0739) 4F6E  0100111101101110 ( 452)                 JSR   NUM_TO_STRING
(073A) 2E15  0010111000010101 ( 454) END_SQRT        LD    R7 saveR7
(073B) C1C0  1100000111000000 ( 455)                 RET   
(073C) 0030  0000000000110000 ( 457) PAS             .FILL x0030
(073D) FFD0  1111111111010000 ( 458) NAS             .FILL xFFD0
(073E) FE00  1111111000000000 ( 459) KBSR            .FILL xFE00
(073F) FE02  1111111000000010 ( 460) KBDR            .FILL xFE02
(0740) FE04  1111111000000100 ( 461) DSR             .FILL xFE04
(0741) FE06  1111111000000110 ( 462) DDR             .FILL xFE06
(0742) 0026  0000000000100110 ( 463) enter           .FILL x0026
(0743) FFD3  1111111111010011 ( 464) minus           .FILL xFFD3
(0744) 0001  0000000000000001 ( 465) mult10          .FILL x0001
(0745) 000A  0000000000001010 ( 466)                 .FILL x000A
(0746) 0064  0000000001100100 ( 467)                 .FILL x0064
(0747) 03E8  0000001111101000 ( 468)                 .FILL x03E8
(0748) 2710  0010011100010000 ( 469)                 .FILL x2710
(0749) 0000  0000000000000000 ( 470) saveR0          .FILL x0000
(074A) 0000  0000000000000000 ( 471) saveR1          .FILL x0000
(074B) 0000  0000000000000000 ( 472) saveR2          .FILL x0000
(074C) 0000  0000000000000000 ( 473) saveR3          .FILL x0000
(074D) 0000  0000000000000000 ( 474) saveR4          .FILL x0000
(074E) 0000  0000000000000000 ( 475) saveR5          .FILL x0000
(074F) 0000  0000000000000000 ( 476) saveR6          .FILL x0000
(0750) 0000  0000000000000000 ( 477) saveR7          .FILL x0000
(0751) 0000  0000000000000000 ( 478) saveR7_resr     .FILL x0000
(0752) 0000  0000000000000000 ( 479) saveR7_sign     .FILL x0000
(0753) 0000  0000000000000000 ( 480) saveR7_mult     .FILL x0000
(0754) 0000  0000000000000000 ( 481) saveR7_divi     .FILL x0000
(0755) 0000  0000000000000000 ( 482) saveR7_divn     .FILL x0000
(0756) 0000  0000000000000000 ( 483) saveR7_strn     .FILL x0000
(0757) 0000  0000000000000000 ( 484) saveR7_nstr     .FILL x0000
(0758) 3501  0011010100000001 ( 485) string          .FILL x3501
(0759) CAFF  1100101011111111 ( 486) strend          .FILL xCAFF
(075A) 4001  0100000000000001 ( 487) numstr          .FILL x4001
(075B) BFFF  1011111111111111 ( 488) numend          .FILL xBFFF
(075C) 0000  0000000000000000 ( 489) len1            .FILL x0000
(075D) 0000  0000000000000000 ( 490) len2            .FILL x0000
(075E) 3FF1  0011111111110001 ( 493) INPUT_STRING_N1 ST    R7 saveR7
(075F) 5020  0101000000100000 ( 495)                 AND   R0 R0 #0
(0760) 5B60  0101101101100000 ( 496)                 AND   R5 R5 #0
(0761) 1B69  0001101101101001 ( 497)                 ADD   R5 R5 #9
(0762) 2DF5  0010110111110101 ( 498)                 LD    R6 string
(0763) 7180  0111000110000000 ( 500) CLEAR_STRING_1  STR   R0 R6 #0
(0764) 1DA1  0001110110100001 ( 501)                 ADD   R6 R6 #1
(0765) 1B7F  0001101101111111 ( 502)                 ADD   R5 R5 #-1
(0766) 03FC  0000001111111100 ( 503)                 BRP   CLEAR_STRING_1
(0767) 2BDA  0010101111011010 ( 505)                 LD    R5 enter
(0768) 2DEF  0010110111101111 ( 506)                 LD    R6 string
(0769) 5020  0101000000100000 ( 508) INPUT_1         AND   R0 R0 #0
(076A) 29D2  0010100111010010 ( 509)                 LD    R4 NAS
(076B) A3D2  1010001111010010 ( 511) chkKB_1         LDI   R1 KBSR
(076C) 07FE  0000011111111110 ( 512)                 BRZP  chkKB_1
(076D) A1D1  1010000111010001 ( 513)                 LDI   R0 KBDR
(076E) A3D1  1010001111010001 ( 516) chkD_1          LDI   R1 DSR
(076F) 07FE  0000011111111110 ( 517)                 BRZP  chkD_1
(0770) B1D0  1011000111010000 ( 518)                 STI   R0 DDR
(0771) 4F58  0100111101011000 ( 519)                 JSR   CHECK_MINUS_SIGN
(0772) 1260  0001001001100000 ( 520)                 ADD   R1 R1 #0
(0773) 0806  0000100000000110 ( 521)                 BRN   IS_A_MINUS_SIGN_1
(0774) 1004  0001000000000100 ( 522)                 ADD   R0 R0 R4
(0775) 7180  0111000110000000 ( 523)                 STR   R0 R6 #0
(0776) 1DA1  0001110110100001 ( 524)                 ADD   R6 R6 #1
(0777) 1405  0001010000000101 ( 525)                 ADD   R2 R0 R5
(0778) 0405  0000010000000101 ( 526)                 BRZ   DONE_ENTER_1
(0779) 0FEF  0000111111101111 ( 527)                 BRNZP INPUT_1
(077A) 295A  0010100101011010 ( 530) IS_A_MINUS_SIGN_1 LD    R4 CASE_2
(077B) 1921  0001100100100001 ( 531)                 ADD   R4 R4 #1
(077C) 3958  0011100101011000 ( 532)                 ST    R4 CASE_2
(077D) 0FEB  0000111111101011 ( 533)                 BRNZP INPUT_1
(077E) 2BDA  0010101111011010 ( 536) DONE_ENTER_1    LD    R5 strend
(077F) 1B85  0001101110000101 ( 537)                 ADD   R5 R6 R5
(0780) 1B7F  0001101101111111 ( 538)                 ADD   R5 R5 #-1
(0781) 3BDA  0011101111011010 ( 539)                 ST    R5 len1
(0782) 2FCD  0010111111001101 ( 540)                 LD    R7 saveR7
(0783) C1C0  1100000111000000 ( 541)                 RET   
(0784) 3FCB  0011111111001011 ( 544) INPUT_STRING_N2 ST    R7 saveR7
(0785) 5020  0101000000100000 ( 546)                 AND   R0 R0 #0
(0786) 5B60  0101101101100000 ( 547)                 AND   R5 R5 #0
(0787) 1B69  0001101101101001 ( 548)                 ADD   R5 R5 #9
(0788) 2DCF  0010110111001111 ( 549)                 LD    R6 string
(0789) 7180  0111000110000000 ( 551) CLEAR_STRING_2  STR   R0 R6 #0
(078A) 1DA1  0001110110100001 ( 552)                 ADD   R6 R6 #1
(078B) 1B7F  0001101101111111 ( 553)                 ADD   R5 R5 #-1
(078C) 03FC  0000001111111100 ( 554)                 BRP   CLEAR_STRING_2
(078D) 2BB4  0010101110110100 ( 556)                 LD    R5 enter
(078E) 2DC9  0010110111001001 ( 557)                 LD    R6 string
(078F) 5020  0101000000100000 ( 559) INPUT_2         AND   R0 R0 #0
(0790) 29AC  0010100110101100 ( 560)                 LD    R4 NAS
(0791) A3AC  1010001110101100 ( 562) chkKB_2         LDI   R1 KBSR
(0792) 07FE  0000011111111110 ( 563)                 BRZP  chkKB_2
(0793) A1AB  1010000110101011 ( 564)                 LDI   R0 KBDR
(0794) A3AB  1010001110101011 ( 567) chkD_2          LDI   R1 DSR
(0795) 07FE  0000011111111110 ( 568)                 BRZP  chkD_2
(0796) B1AA  1011000110101010 ( 569)                 STI   R0 DDR
(0797) 4F32  0100111100110010 ( 570)                 JSR   CHECK_MINUS_SIGN
(0798) 1260  0001001001100000 ( 571)                 ADD   R1 R1 #0
(0799) 0806  0000100000000110 ( 572)                 BRN   IS_A_MINUS_SIGN_2
(079A) 1004  0001000000000100 ( 573)                 ADD   R0 R0 R4
(079B) 7180  0111000110000000 ( 574)                 STR   R0 R6 #0
(079C) 1DA1  0001110110100001 ( 575)                 ADD   R6 R6 #1
(079D) 1405  0001010000000101 ( 576)                 ADD   R2 R0 R5
(079E) 0405  0000010000000101 ( 577)                 BRZ   DONE_ENTER_2
(079F) 0FEF  0000111111101111 ( 578)                 BRNZP INPUT_2
(07A0) 2934  0010100100110100 ( 581) IS_A_MINUS_SIGN_2 LD    R4 CASE_2
(07A1) 1922  0001100100100010 ( 582)                 ADD   R4 R4 #2
(07A2) 3932  0011100100110010 ( 583)                 ST    R4 CASE_2
(07A3) 0FEB  0000111111101011 ( 584)                 BRNZP INPUT_2
(07A4) 2BB4  0010101110110100 ( 587) DONE_ENTER_2    LD    R5 strend
(07A5) 1B85  0001101110000101 ( 588)                 ADD   R5 R6 R5
(07A6) 1B7F  0001101101111111 ( 589)                 ADD   R5 R5 #-1
(07A7) 3BB5  0011101110110101 ( 590)                 ST    R5 len2
(07A8) 2FA7  0010111110100111 ( 591)                 LD    R7 saveR7
(07A9) C1C0  1100000111000000 ( 592)                 RET   
(07AA) 3FA6  0011111110100110 ( 595) RESET_R         ST    R7 saveR7_resr
(07AB) 5020  0101000000100000 ( 596)                 AND   R0 R0 #0
(07AC) 5260  0101001001100000 ( 597)                 AND   R1 R1 #0
(07AD) 54A0  0101010010100000 ( 598)                 AND   R2 R2 #0
(07AE) 56E0  0101011011100000 ( 599)                 AND   R3 R3 #0
(07AF) 5920  0101100100100000 ( 600)                 AND   R4 R4 #0
(07B0) 5B60  0101101101100000 ( 601)                 AND   R5 R5 #0
(07B1) 5DA0  0101110110100000 ( 602)                 AND   R6 R6 #0
(07B2) 2F9E  0010111110011110 ( 603)                 LD    R7 saveR7_resr
(07B3) C1C0  1100000111000000 ( 604)                 RET   
